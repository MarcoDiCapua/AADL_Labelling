package HSS
public
	with Base_Types,    
     EMV2,  --error modeling properties
     ErrorLibrary;  --predeclared error types in Error Modeling annex
 	
     
 
     annex EMV2
    {**
	error types
	  IntuderAlarmError: type;  
	  FireAlarmError : type;		
	  MobileDeviceError : type;
	  MotionDetectorError : type ;  
	  SmokeDetectorError: type;
	  MagneticAlarmSensorError:type;
	end types;
	
	error behavior FailStop
	  use types HSS;
	  events fail: error event;
	  states 
	    working: initial state; 
	    failed : state;
	  transitions
	    working -[fail]-> failed;
	end behavior;
**};
	
	system SecuritySystem
		
	end SecuritySystem;
	
	system implementation SecuritySystem.with_devices
		subcomponents
			this_MotionDetector : device MotionDetector;
			this_MagneticAlarmSensor: device MagneticAlarmSensor;
			this_SmokeDetector: device SmokeDetector;
			this_IntruderAlarm: device IntruderAlarm;
			this_FireAlarm: device FireAlarm;
			this_Mobile: device Mobile;
			this_Controller: process Controller.impl;
			this_security_protocols: process security_protocols;
			this_Bus: bus HWConnection.impl;
			this_processor: processor MainProcessor.impl;
			
	
			
		connections
			motion_con: port this_MotionDetector.Motion_Detected->this_Controller.motion_in;
			smoke_con: port this_SmokeDetector.Smoke_Detected->this_Controller.smoke_in;
			magnetic_con: port this_MagneticAlarmSensor.alarm_set_off->this_Controller.magnetic_in;
			fire_alarm_con: port this_Controller.FAlarm_out->this_FireAlarm.F_alarm_on_off;
			intruder_alarm_con: port this_Controller.IAlarm_out->this_IntruderAlarm.I_alarm_on_off;
			mobile_con: port this_Controller.notification_out->this_Mobile.notification_in;
			
			bus_motion: bus access this_Bus-> this_MotionDetector.Bus_Access;
			bus_magnetic: bus access this_Bus-> this_MagneticAlarmSensor.Bus_Access;
			bus_smoke: bus access this_Bus-> this_SmokeDetector.Bus_Access;
			bus_IAlarm: bus access this_Bus-> this_IntruderAlarm.Bus_Access;
			bus_FAlarm: bus access this_Bus-> this_FireAlarm.Bus_Access;
			bus_processor: bus access this_Bus-> this_processor.Bus_Access;
			
	annex Resolute{**
				
			prove(print_aadl(this))
			prove (SystemWideReq1())
			prove (SystemWideReq2())
			prove (SystemWideReq3())
			prove (Security_Features(this))
			prove (Security_Connections(this))
			prove (Security_Data(this))
		**};

			
		
	end SecuritySystem.with_devices;
	
	processor MainProcessor
		features
			Bus_Access: requires bus access HWCOnnection;
			
	end MainProcessor;
	
	processor implementation MainProcessor.impl
		subcomponents
			this_ram: Memory Ram;
			
	end MainProcessor.impl;
	
	memory Ram
		
	end Ram;
	
	bus HWConnection
		
	end HWConnection;
	
	bus implementation HWConnection.impl
		
	end HWConnection.impl;
	
	device MotionDetector
		features
			Motion_Detected: out event port;
			Bus_Access: requires bus access HWCOnnection;	
			
  annex EMV2 
  {** 
    use types ErrorLibrary, HSS;
    use behavior HSS::FailStop;
  error propagations
  motion_detected: out propagation  {LateDelivery};
  
    
    	
   flows
  	motion_detected_error : error source motion_detected {LateDelivery};
  	

  	end propagations;
  	
  	component error behavior
  	 detections 
      failed -[ ]-> motion_detected!;
  end component;
  	
  	properties
    EMV2::OccurrenceDistribution => SecProperties::Motion_Detector_failure
      applies to motion_Detected.LateDelivery;
  
  **};
  
			
	
		
	end MotionDetector;
	
	device implementation MotionDetector.impl
		
	end MotionDetector.impl;
	
	device MagneticAlarmSensor
		features
			alarm_set_off: out event port;
			Bus_Access: requires bus access HWCOnnection;
			
	annex EMV2 
  {** 
    use types ErrorLibrary, HSS;
    use behavior HSS::FailStop;
  error propagations
alarm_set_off: out propagation  {LateDelivery};
  
    
    	
   flows
  	alarm_sensor_error : error source alarm_set_off {LateDelivery};
  	

  	end propagations;
  	
  	component error behavior
  	 detections 
      failed -[ ]-> alarm_set_off!;
  end component;
  	
  	properties
    EMV2::OccurrenceDistribution => SecProperties::Magnetic_Sensor_failure
      applies to alarm_set_off.LateDelivery;
  
  **};
  
		
	end MagneticAlarmSensor;
	
	device implementation MagneticAlarmSensor.impl
		
	end MagneticAlarmSensor.impl;
	
	device SmokeDetector
		features
			Smoke_Detected: out event port;
			Bus_Access: requires bus access HWCOnnection;
			
	annex EMV2 
  {** 
    use types ErrorLibrary, HSS;
    use behavior HSS::FailStop;
  error propagations
Smoke_Detected: out propagation  {LateDelivery};
  
    
    	
   flows
  	Smoke_Detector_error : error source Smoke_Detected {LateDelivery};
  	

  	end propagations;
  	
  	component error behavior
  	 detections 
      failed -[ ]-> Smoke_Detected!;
  end component;
  	
  	properties
    EMV2::OccurrenceDistribution => SecProperties::Smoke_Detector_failure
      applies to Smoke_Detected.LateDelivery;
  
  **};		
		
	end SmokeDetector;
	
	device implementation SmokeDetector.impl
		
	end SmokeDetector.impl;
	
	device IntruderAlarm
		features
			I_alarm_on_off: in event port;
			Bus_Access: requires bus access HWCOnnection;
			
	annex EMV2 
  {** 
    use types ErrorLibrary, HSS;
    use behavior HSS::FailStop;
  error propagations
I_alarm_on_off: in propagation  {LateDelivery};
  
    
    	
   flows
  	Intruder_Alarm_error : error sink I_alarm_on_off {LateDelivery};
  	

  	end propagations;
  	
  	component error behavior
  	 detections 
      failed -[ ]-> I_alarm_on_off!;
  end component;
  	
  	properties
    EMV2::OccurrenceDistribution => SecProperties::Smoke_Detector_failure
      applies to I_alarm_on_off.LateDelivery;
  
  **};		
		
	end IntruderAlarm;
	
	device implementation IntruderAlarm.impl
		
	end IntruderAlarm.impl;
	
    device FireAlarm
    	features 
    		F_alarm_on_off: in event port;
    		Bus_Access: requires bus access HWCOnnection;
    		
    annex EMV2 
  {** 
    use types ErrorLibrary, HSS;
    use behavior HSS::FailStop;
  error propagations
F_alarm_on_off: in propagation  {LateDelivery};
  
    
    	
   flows
  	Intruder_Alarm_error : error sink F_alarm_on_off {LateDelivery};
  	

  	end propagations;
  	
  	component error behavior
  	 detections 
      failed -[ ]-> F_alarm_on_off!;
  end component;
  	
  	properties
    EMV2::OccurrenceDistribution => SecProperties::Smoke_Detector_failure
      applies to F_alarm_on_off.LateDelivery;
  
  **};		
    	
    end FireAlarm;
    
    device implementation FireAlarm.impl
    	
    end FireAlarm.impl;
    
    device Mobile
    	features
    		notification_in: in event port;
    		
     annex EMV2 
  {** 
    use types ErrorLibrary, HSS;
    use behavior HSS::FailStop;
  error propagations
notification_in: in propagation  {LateDelivery};
  
    
    	
   flows
  	notification_in  : error sink notification_in {LateDelivery};
  	

  	end propagations;
  	
  	component error behavior
  	 detections 
      failed -[ ]-> notification_in!;
  end component;
  	
  	properties
    EMV2::OccurrenceDistribution => SecProperties::Smoke_Detector_failure
      applies to notification_in.LateDelivery;
  
  **};		
    	
    end Mobile;
    
    device implementation Mobile.impl
    	
    end Mobile.impl;
	
	process controller
		features 
			motion_in: in event port;
			smoke_in: in event port;
			magnetic_in: in event port;
			IAlarm_out: out event port;
			FAlarm_out: out event port;
			notification_out: out event port;
			
		
	end controller;
	
	process security_protocols
		
	end security_protocols;
	
	process implementation controller.impl
		subcomponents
			this_threadMotion: thread ReadMotion;
			this_threadSmoke: thread ReadSmoke;
			this_threadMagnetic: thread ReadMagnetic;
			this_threadControlRules: thread ControlRules;
			
		connections
			motion_thread_con: port motion_in-> this_threadMotion.motion_in;
			smoke_thread_con: port smoke_in-> this_threadSmoke.smoke_in;
			magnetic_thread_con: port magnetic_in-> this_threadMagnetic.magnetic_in;
			motion_control_con: port this_threadMotion.motion_out->this_threadControlRules.motion_in;
			smoke_control_con: port this_threadSmoke.smoke_out-> this_threadControlRules.smoke_in;
			magnetic_control_con: port this_threadMagnetic.magnetic_out->this_threadControlRules.magnetic_in;
			IAlarm_control_con: port this_threadControlRules.IAlarm_out->IAlarm_out;
			FAlarm_control_con: port this_threadControlRules.FAlarm_out->FAlarm_out;
			
	annex EMV2 
  {** 
    use types ErrorLibrary,HSS;
    use behavior HSS::FailStop;
    
    error propagations
      notification_out: out propagation {LateDelivery} ; 
      IAlarm_out: out propagation {LateDelivery};
      FAlarm_out: out propagation {LateDelivery};
      smoke_in : in propagation {LateDelivery};
      motion_in: in propagation {LateDelivery};
      magnetic_in: in propagation {LateDelivery};
      
     
     flows  
   notification_error: error source notification_out { LateDelivery };
    IAlarm_error: error source IAlarm_out { LateDelivery };
    FAlarm_error: error source FAlarm_out { LateDelivery };
    smoke_error: error sink smoke_in {LateDelivery};
   motion_error: error sink motion_in {LateDelivery};
   magnetic_error: error sink magnetic_in {LateDelivery};
  
      end propagations;
      
      component error behavior
      
      detections  --in "failed" state put value on port interface_failure
      failed -[ ]-> notification_out!;
      failed -[ ]-> IAlarm_out!;
      failed -[ ]-> FAlarm_out!;
      
  end component;
  
  properties  --set occurrence
    EMV2::OccurrenceDistribution => SecProperties::Controller_failure
      applies to notification_out; 
      EMV2::OccurrenceDistribution => SecProperties::Controller_failure
      applies to IAlarm_out; 
      EMV2::OccurrenceDistribution => SecProperties::Controller_failure
      applies to FAlarm_out; 
    --"fail" is the internal event that cause
    EMV2::OccurrenceDistribution => SecProperties::InterfaceFailureRate 
      applies to fail;      
  **};
  
			
			
	end controller.impl;
		
		thread ReadMotion	
			features
				motion_in: in event port;
				motion_out: out event port;
				
		end ReadMotion;
		
		thread implementation ReadMotion.impl
		end ReadMotion.impl;
		
		thread ReadSmoke
			features
				smoke_in: in event port;
				smoke_out: out event port;
		end ReadSmoke;
		
		thread implementation ReadSmoke.impl
		end ReadSmoke.impl;
		
		thread ReadMagnetic
			features
				magnetic_in: in event port;
				magnetic_out: out event port;
		end ReadMagnetic;
		
		thread implementation ReadMagnetic.impl
		end ReadMagnetic.impl;
		
		thread ControlRules
			features
				motion_in: in event port;
				smoke_in: in event port;
				magnetic_in : in event port;
				FAlarm_out: out event port;
				IAlarm_out: out event port;
				
		end ControlRules;
		
		thread implementation ControlRules.impl
		end ControlRules.impl;
		
	
	
	
end HSS;
